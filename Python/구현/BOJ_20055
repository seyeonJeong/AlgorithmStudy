from collections import Counter

n,k = map(int,input().split())

strength = list(map(int,input().split()))
stage = 0

robot = [0 for _ in range(len(strength))]
    
while True:
    # 단계 계산
    stage += 1
    # 회전을 해준다.
    strength = strength[-1:] + strength[:-1]
    robot = robot[-1:] + robot[:-1]
    # 회전을 했는데 내리는 칸이면 내린다.
    if robot[n-1] == 1:
        robot[n-1] = 0
        
    for i in range(n-2,-1,-1):
        # 로봇은 index n-2칸에서만 존재한다. (n-1칸에서 내리므로)
        # 그래서 내구도가 0이 아니면 이동
        if strength[i+1] != 0 and robot[i] == 1 and robot[i+1] == 0:
            robot[i] = 0
            robot[i+1] = 1
            strength[i+1] -= 1
        # 만약 내리는 칸이면 내린다.
        if robot[n-1] == 1:
            robot[n-1] = 0
    # 만약 올리는 위치에 내구도가 0이 아니면 올린다.
    if strength[0] != 0:
        robot[0] = 1
        strength[0] -= 1
    # 내구도가 0칸인 개수를 측정
    cnt = 0    
    for j in range(len(strength)):
        if strength[j] == 0:
            cnt += 1
    # k개 이상이면 종료
    if cnt >= k:
        break
    
print(stage)
    
    
    


