import sys
import heapq
input = sys.stdin.readline

INF = int(1e9)

def dijkstra(start):
    q = []
    heapq.heappush(q,(0,start))
    distance[start] = 0

    while q:
        dis,now = heapq.heappop(q)

        if dis > distance[now]:
            continue

        for i in graph[now]:
            cost = dis + i[1]
            if cost < distance[i[0]]:
                distance[i[0]] = cost
                heapq.heappush(q,(cost,i[0]))



V,E = map(int,input().split())
S = int(input())
graph = [[] for _ in range(V+1)]

distance = [INF] * (V+1)

for i in range(E):
    u,v,w = map(int,input().split())
    graph[u].append((v,w))

dijkstra(S)
for i in range(1,len(distance)):
    if distance[i] == INF:
        print('INF')
    else:
        print(distance[i])



