# 다양하게 푸는 방법이 있는데 그냥 거의 구현에 가깝게 풀었으나, 문제 자체는 백트래킹, 브루트포스로 분류되어있어 그냥 기타에 넣음
from itertools import combinations,permutations

N = int(input())
a = list(map(int,input().split()))
op_num = list(map(int,input().split()))
ope = []

for i in range(len(op_num)):
    if op_num[i] > 0 :
        if i == 0:
            for j in range(op_num[i]):
                ope.append('+')
        elif i == 1:
            for j in range(op_num[i]):
                ope.append('-')
        elif i == 2:
            for j in range(op_num[i]):
                ope.append('*')
        else:
            for j in range(op_num[i]):
                ope.append('//')
                
perm_ope = list(permutations(ope))

answer = []
sum = a[0]
for i in range(len(perm_ope)):
    for j in range(len(perm_ope[i])):
        if perm_ope[i][j] == '+':
            sum += a[j+1]
        elif perm_ope[i][j] == '-':
            sum -= a[j+1]
        elif perm_ope[i][j] == '*':
            sum *= a[j+1]
        else:
            if sum < 0:
                sum = -(abs(sum) // a[j+1])
            else:
                sum = sum // a[j+1]
                
    answer.append(sum)
    sum = a[0]


print(max(answer))
print(min(answer))
