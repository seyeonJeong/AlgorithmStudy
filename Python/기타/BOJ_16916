# KMP 알고리즘인데 아직 완전하게 이해는 못했다. 나중에 다시 풀어보기

S = input()
P = input()


def KMP_table(pattern):
    lp = len(pattern)
    tb = [0 for _ in range(lp)]
    
    pidx = 0
    for idx in range(1,lp):
        while pidx > 0 and pattern[pidx] != pattern[idx]:
            pidx = tb[pidx-1]
        
        if pattern[idx] == pattern[pidx]:
            pidx += 1
            tb[idx] = pidx
    
    return tb
    
def KMP(word, pattern):
    
    table = KMP_table(pattern)
    pidx = 0
    result = False
    
    for idx in range(len(word)):
        while pidx > 0 and word[idx] != pattern[pidx]:
            pidx = table[pidx-1]
            
        if word[idx] == pattern[pidx]:
            if pidx == len(pattern)-1:
                result = True
                break
            else:
                pidx += 1
    return result



if KMP(S,P):
    print(1)
else:
    print(0)
                
        
